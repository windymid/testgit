%li.timeline-entry{ id: dom_id(note), class: dom_class(note), data: { discussion: note.discussion_id } }
  .timeline-entry-inner
    .timeline-icon
      = image_tag avatar_icon(note.author_email), class: "avatar s40"
    .timeline-content
      .note-header
        .note-actions
          = link_to "##{dom_id(note)}", name: dom_id(note) do
            %i.fa.fa-link
            Link here
          &nbsp;
          - if can?(current_user, :admin_note, note) && note.editable?
            = link_to "#", title: "Edit comment", class: "js-note-edit" do
              %i.fa.fa-pencil-square-o
              Edit
            &nbsp;
            = link_to project_note_path(@project, note), title: "Remove comment", method: :delete, data: { confirm: 'Are you sure you want to remove this comment?' }, remote: true, class: "danger js-note-delete" do
              %i.fa.fa-trash-o.cred
              Remove
        = link_to_member(@project, note.author, avatar: false)
        %span.note-last-update
          = note_timestamp(note)

        - if note.upvote?
          %span.vote.upvote.label.label-success
            %i.fa.fa-thumbs-up
            \+1
        - if note.downvote?
          %span.vote.downvote.label.label-danger
            %i.fa.fa-thumbs-down
            \-1


      .note-body
        .note-text
          = preserve do
            = markdown(note.note, {no_header_anchors: true})

        .note-edit-form
          = form_for note, url: project_note_path(@project, note), method: :put, remote: true, authenticity_token: true do |f|
            = f.text_area :note, class: 'note_text js-note-text js-gfm-input turn-on'

            .form-actions.clearfix
              = f.submit 'Save changes', class: "btn btn-primary btn-save js-comment-button"

              .note-form-option
                %a.choose-btn.btn.js-choose-note-attachment-button
                  %i.fa.fa-paperclip
                  %span Choose File ...
                &nbsp;
                %span.file_name.js-attachment-filename File name...
                = f.file_field :attachment, class: "js-note-attachment-input hidden"

              = link_to  'Cancel', "#", class: "btn btn-cancel note-edit-cancel"


      - if note.attachment.url
        .note-attachment
          - if note.attachment.image?
            = link_to note.attachment.secure_url, target: '_blank' do
              = image_tag note.attachment.secure_url, class: 'note-image-attach'
          .attachment.pull-right
            = link_to note.attachment.secure_url, target: "_blank" do
              %i.fa.fa-paperclip
              = note.attachment_identifier
              = link_to delete_attachment_project_note_path(@project, note),
                title: "Delete this attachment", method: :delete, remote: true, data: { confirm: 'Are you sure you want to remove the attachment?' }, class: "danger js-note-attachment-delete" do
                %i.fa.fa-trash-o.cred
      .clear
